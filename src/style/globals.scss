body {
  color: var(--textColor);
  background-color: var(--bgColor);
  font: 15px sans-serif;
  margin: 0;
}

.container {
  display: flex;
  justify-content: center;
  flex-direction: row;
  gap: 0px 10px;
  margin: 10px;

  @media screen and (max-width: 600px) {
    flex-direction: column;
  }
}

.render-container {
  max-width: 800px;
  flex: 1;

  display: flex;
  flex-direction: column;
  justify-content: center;
}

.sidebar {
  width: 230px;
  display: flex;
  flex-direction: column;
  gap: 1em;

  @media screen and (max-width: 600px) {
    width: 100%;
  }
}

.sidebar-row {
  display: flex;
  flex-direction: row;
  gap: 10px;
  align-items: center;
}

input[type='text'], select, button {
  font: inherit;
  background-color: inherit;
  color: inherit;
  width: 100%;
  border: 1px solid var(--borderColor);
  padding: 0.7em;
  box-sizing: border-box;
  border-radius: 4px;
}

input[type='text'], select {
  &:focus {
    outline: none;
    border-color: var(--focusBorderColor);
  }
}

option {
  background-color: var(--bgColor);
}

input[type='checkbox'] {
  appearance: none;
  flex-shrink: 0;
  display: grid;
  place-content: center;
  margin: 0;
  width: 18px;
  height: 18px;
  border: 2px solid var(--thickBorderColor);
  background-color: none;
}

input[type="checkbox"]::before {
  content: "";
  width: 10px;
  height: 10px;
}

input[type="checkbox"]:checked::before {
  background-color: white;
}

input[type="checkbox"][name="isometry1"]:checked::before {
  background-color: var(--isometry1Color);
}

input[type="checkbox"][name="isometry2"]:checked::before {
  background-color: var(--isometry2Color);
}

hr {
  border: none;
  width: 80%;
  height: 1px;
  background-color: var(--borderColor);
}

.number-input {
  display: flex;
  width: 100%;
  flex-direction: row;
  input[type='text'] {
    border-radius: 4px 0 0 4px;
  }

  .number-input-buttons {
    flex-shrink: 0;
    width: 20px;

    display: flex;
    flex-direction: column;

    .number-input-up {
      flex: 1;
      border: 1px solid var(--borderColor);
      border-left: none;

      border-radius: 0 4px 0 0;

      position: relative;

      i {
        border-width: 0 .3em .3em;
        border-color: transparent transparent var(--borderColor);
        border-style: solid;
        margin: -0.2em 0 0 -0.3em;
      }

      &:hover i {
        border-color: transparent transparent var(--focusBorderColor);
      }
    }

    .number-input-down {
      flex: 1;
      border: 1px solid var(--borderColor);;
      border-left: none;
      border-top: none;

      border-radius: 0 0 4px 0;

      position: relative;

      i {
        border-width: .3em .3em 0;
        border-color: var(--borderColor) transparent transparent;
        border-style: solid;
        margin: -0.1em 0 0 -0.3em;
      }

      &:hover i {
        border-color: var(--focusBorderColor) transparent transparent;
      }
    }

    i {
      position: absolute;
      top: 50%;
      left: 50%;
    }
  }
}
.matrix-input-container {
  display: flex;
  gap: 0.5em;
  align-items: center;

  .matrix-input {
    display: inline-grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 3px;
    width: 100px;
    height: 80px;
  
    input {
      background: none;
      color: inherit;
      border: 1px dashed var(--borderColor);;
      padding: 2px;
      text-align: center;
    }
  
    input:focus {
      border-color: var(--focusBorderColor);;
    }
  }
}

.combined-elements {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.2em;
}

.latex {
  color: var(--thickBorderColor);;
}